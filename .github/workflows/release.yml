name: Build/release Electron app

on:
  push:
    tags:
      - v*.*.*
  workflow_dispatch:

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set Electron cache
        run: |
          echo "ELECTRON_CACHE=${{ runner.temp }}/electron-cache" >> $GITHUB_ENV
          echo "ELECTRON_BUILDER_CACHE=${{ runner.temp }}/electron-builder-cache" >> $GITHUB_ENV

      - name: Cache Electron
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/electron-cache
          key: ${{ runner.os }}-electron-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-cache-

      - name: Cache Electron Builder
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/electron-builder-cache
          key: ${{ runner.os }}-electron-builder-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-electron-builder-cache-

      - name: Install Dependencies
        run: |
          npm config set registry https://registry.npmjs.org/
          npm install --no-audit --no-fund
        env:
          ELECTRON_MIRROR: https://npmmirror.com/mirrors/electron/
          ELECTRON_CUSTOM_DIR: '{{ version }}'

      # - name: build-linux
      #   if: matrix.os == 'ubuntu-latest'
      #   run: npm run build:linux

      # - name: build-mac
      #   if: matrix.os == 'macos-latest'
      #   run: npm run build:mac

      - name: build-win
        if: matrix.os == 'windows-latest'
        run: npm run build:win
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          files: |
            dist/*.exe
            dist/*.zip
            dist/*.dmg
            dist/*.AppImage
            dist/*.snap
            dist/*.deb
            dist/*.rpm
            dist/*.tar.gz
            dist/*.yml
            dist/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
